Index: .env
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># In all environments, the following files are loaded if they exist,\r\n# the latter taking precedence over the former:\r\n#\r\n#  * .env                contains default values for the environment variables needed by the app\r\n#  * .env.local          uncommitted file with local overrides\r\n#  * .env.$APP_ENV       committed environment-specific defaults\r\n#  * .env.$APP_ENV.local uncommitted environment-specific overrides\r\n#\r\n# Real environment variables win over .env files.\r\n#\r\n# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.\r\n#\r\n# Run \"composer dump-env prod\" to compile .env files for production use (requires symfony/flex >=1.2).\r\n# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration\r\n\r\n###> symfony/framework-bundle ###\r\nAPP_ENV=dev\r\nAPP_SECRET=44c5717b8e2f84d9893d6753732fdabf\r\n###< symfony/framework-bundle ###\r\n\r\n###> symfony/mailer ###\r\n# MAILER_DSN=smtp://localhost\r\n###< symfony/mailer ###\r\n\r\n###> doctrine/doctrine-bundle ###\r\n# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url\r\n# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml\r\n#\r\n# DATABASE_URL=\"sqlite:///%kernel.project_dir%/var/data.db\"\r\nDATABASE_URL=\"mysql://root:password@127.0.0.1:3306/gastronhome\"\r\n# DATABASE_URL=\"postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=13&charset=utf8\"\r\n###< doctrine/doctrine-bundle ###\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.env b/.env
--- a/.env	(revision c1a80fbf5834c046491cce4729a9e241926c2f83)
+++ b/.env	(date 1614694423271)
@@ -27,6 +27,6 @@
 # IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
 #
 # DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
-DATABASE_URL="mysql://root:password@127.0.0.1:3306/gastronhome"
+DATABASE_URL="mysql://root:root@127.0.0.1:3306/gastronhome"
 # DATABASE_URL="postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=13&charset=utf8"
 ###< doctrine/doctrine-bundle ###
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_11_25__Default_Changelist_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_11_25__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_11_25__Default_Changelist_.xml
new file mode 100644
--- /dev/null	(date 1614680809084)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_11_25__Default_Changelist_.xml	(date 1614680809084)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_02_03_2021_11_25_[Default_Changelist]" date="1614680714150" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_11_25_[Default_Changelist]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 02/03/2021 11:25 [Default Changelist]" />
+</changelist>
\ No newline at end of file
Index: src/Form/CategorieRestaurantType.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Form/CategorieRestaurantType.php b/src/Form/CategorieRestaurantType.php
new file mode 100644
--- /dev/null	(date 1614692570799)
+++ b/src/Form/CategorieRestaurantType.php	(date 1614692570799)
@@ -0,0 +1,31 @@
+<?php
+
+namespace App\Form;
+
+use App\Entity\CategorieRestaurant;
+use Symfony\Bridge\Doctrine\Form\Type\EntityType;
+use Symfony\Component\Form\AbstractType;
+use Symfony\Component\Form\FormBuilderInterface;
+use Symfony\Component\OptionsResolver\OptionsResolver;
+
+class CategorieRestaurantType extends AbstractType
+{
+    public function buildForm(FormBuilderInterface $builder, array $options)
+    {
+        $builder
+            ->add('CategorieRestaurant', EntityType::class,[
+                'class' => CategorieRestaurant::class,
+                'choice_label' => function ($categoriesResto) {
+                   return $categoriesResto;
+            }
+            ]);
+    }
+
+
+    public function configureOptions(OptionsResolver $resolver)
+    {
+        $resolver->setDefaults([
+            'data_class' => CategorieRestaurant::class,
+        ]);
+    }
+}
Index: templates/accueil_client/index.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'base.html.twig' %}\r\n\r\n{% block title %}Hello AccueilClientController!{% endblock %}\r\n\r\n{% block body %}\r\n\r\n\r\n    <div>\r\n        <h1> Connecté </h1>\r\n\r\n        <a href=\"a_definir_le_chemin.html.twig\">Profils</a>\r\n        <a href=\"a_definir_le_chemin.html.twig\">Historique des Commandes</a>\r\n        <a href=\"a_definir_le_chemin.html.twig\">Se Déconnecter</a>\r\n\r\n    </div>\r\n    <div>\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Adresse</th>\r\n                // récupérer les catégories restaurants\r\n                <th></th>\r\n\r\n\r\n            </tr>\r\n            </thead>\r\n\r\n        </table>\r\n\r\n    </div>\r\n\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/accueil_client/index.html.twig b/templates/accueil_client/index.html.twig
--- a/templates/accueil_client/index.html.twig	(revision c1a80fbf5834c046491cce4729a9e241926c2f83)
+++ b/templates/accueil_client/index.html.twig	(date 1614695032297)
@@ -5,25 +5,30 @@
 {% block body %}
 
 
-    <div>
-        <h1> Connecté </h1>
-
-        <a href="a_definir_le_chemin.html.twig">Profils</a>
-        <a href="a_definir_le_chemin.html.twig">Historique des Commandes</a>
-        <a href="a_definir_le_chemin.html.twig">Se Déconnecter</a>
-
-    </div>
     <div>
         <table>
             <thead>
             <tr>
                 <th>Adresse</th>
                 // récupérer les catégories restaurants
-                <th></th>
-
-
+                <th>{{ form(form)}} </th>
             </tr>
+
+
             </thead>
+            <tbody>
+
+
+            <tr>
+               <!-- <td>{ user.adress }}</td>
+
+                % for categorieRestaurant in categorieRestaurants %}
+
+                <td>{{ categorieRestaurant.libelle }}</td>
+                % endfor %} -->
+            </tr>
+
+            </tbody>
 
         </table>
 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_15_08__Default_Changelist_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_15_08__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_15_08__Default_Changelist_.xml
new file mode 100644
--- /dev/null	(date 1614694102193)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_15_08__Default_Changelist_.xml	(date 1614694102193)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_02_03_2021_15_08_[Default_Changelist]" date="1614694083283" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_15_08_[Default_Changelist]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 02/03/2021 15:08 [Default Changelist]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_15_08_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_15_08_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_15_08_[Default_Changelist]/shelved.patch
new file mode 100644
--- /dev/null	(date 1614694083277)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_15_08_[Default_Changelist]/shelved.patch	(date 1614694083277)
@@ -0,0 +1,175 @@
+Index: .env
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+># In all environments, the following files are loaded if they exist,\r\n# the latter taking precedence over the former:\r\n#\r\n#  * .env                contains default values for the environment variables needed by the app\r\n#  * .env.local          uncommitted file with local overrides\r\n#  * .env.$APP_ENV       committed environment-specific defaults\r\n#  * .env.$APP_ENV.local uncommitted environment-specific overrides\r\n#\r\n# Real environment variables win over .env files.\r\n#\r\n# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.\r\n#\r\n# Run \"composer dump-env prod\" to compile .env files for production use (requires symfony/flex >=1.2).\r\n# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration\r\n\r\n###> symfony/framework-bundle ###\r\nAPP_ENV=dev\r\nAPP_SECRET=44c5717b8e2f84d9893d6753732fdabf\r\n###< symfony/framework-bundle ###\r\n\r\n###> symfony/mailer ###\r\n# MAILER_DSN=smtp://localhost\r\n###< symfony/mailer ###\r\n\r\n###> doctrine/doctrine-bundle ###\r\n# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url\r\n# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml\r\n#\r\n# DATABASE_URL=\"sqlite:///%kernel.project_dir%/var/data.db\"\r\nDATABASE_URL=\"mysql://root:password@127.0.0.1:3306/gastronhome\"\r\n# DATABASE_URL=\"postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=13&charset=utf8\"\r\n###< doctrine/doctrine-bundle ###\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.env b/.env
+--- a/.env	(revision c1a80fbf5834c046491cce4729a9e241926c2f83)
++++ b/.env	(date 1614681045351)
+@@ -27,6 +27,6 @@
+ # IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
+ #
+ # DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
+-DATABASE_URL="mysql://root:password@127.0.0.1:3306/gastronhome"
++DATABASE_URL="mysql://root:root@127.0.0.1:3306/gastronhome"
+ # DATABASE_URL="postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=13&charset=utf8"
+ ###< doctrine/doctrine-bundle ###
+Index: src/Entity/CategorieRestaurant.php
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse App\\Repository\\CategorieRestaurantRepository;\r\nuse Doctrine\\Common\\Collections\\ArrayCollection;\r\nuse Doctrine\\Common\\Collections\\Collection;\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\n\r\n/**\r\n * @ORM\\Entity(repositoryClass=CategorieRestaurantRepository::class)\r\n */\r\nclass CategorieRestaurant\r\n{\r\n    /**\r\n     * @ORM\\Id\r\n     * @ORM\\GeneratedValue\r\n     * @ORM\\Column(type=\"integer\")\r\n     */\r\n    private $id;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=20)\r\n     */\r\n    private $libelle;\r\n\r\n    /**\r\n     * @ORM\\ManyToMany(targetEntity=Restaurant::class, inversedBy=\"categorieRestaurants\")\r\n     */\r\n    private $restaurant;\r\n\r\n    public function __construct()\r\n    {\r\n        $this->restaurant = new ArrayCollection();\r\n    }\r\n\r\n    public function getId(): ?int\r\n    {\r\n        return $this->id;\r\n    }\r\n\r\n    public function getLibelle(): ?string\r\n    {\r\n        return $this->libelle;\r\n    }\r\n\r\n    public function setLibelle(string $libelle): self\r\n    {\r\n        $this->libelle = $libelle;\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @return Collection|Restaurant[]\r\n     */\r\n    public function getRestaurant(): Collection\r\n    {\r\n        return $this->restaurant;\r\n    }\r\n\r\n    public function addRestaurant(Restaurant $restaurant): self\r\n    {\r\n        if (!$this->restaurant->contains($restaurant)) {\r\n            $this->restaurant[] = $restaurant;\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function removeRestaurant(Restaurant $restaurant): self\r\n    {\r\n        $this->restaurant->removeElement($restaurant);\r\n\r\n        return $this;\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/Entity/CategorieRestaurant.php b/src/Entity/CategorieRestaurant.php
+--- a/src/Entity/CategorieRestaurant.php	(revision c1a80fbf5834c046491cce4729a9e241926c2f83)
++++ b/src/Entity/CategorieRestaurant.php	(date 1614692249419)
+@@ -8,7 +8,7 @@
+ use Doctrine\ORM\Mapping as ORM;
+ 
+ /**
+- * @ORM\Entity(repositoryClass=CategorieRestaurantRepository::class)
++ * @ORM\Entity(repositoryClass="App\Repository\CategorieRestaurantRepository", repositoryClass=CategorieRestaurantRepository::class)
+  */
+ class CategorieRestaurant
+ {
+@@ -74,4 +74,5 @@
+ 
+         return $this;
+     }
++
+ }
+Index: src/Controller/AccueilClientController.php
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?php\r\n\r\nnamespace App\\Controller;\r\n\r\nuse App\\Entity\\CategorieRestaurant;\r\nuse App\\Repository\\RestaurantRepository;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\r\nuse Symfony\\Component\\HttpFoundation\\Response;\r\nuse Symfony\\Component\\Routing\\Annotation\\Route;\r\n\r\nclass AccueilClientController extends AbstractController\r\n{\r\n    /**\r\n     * @Route(\"/client/accueil\", name=\"client\")\r\n     */\r\n    public function index(): Response\r\n    {\r\n\r\n//        $repositoryRestaurant = $this->getDoctrine()->getRepository(RestaurantRepository::class);\r\n//        $Restaurants = $repositoryRestaurant->findby([], [\"\" => \"DESC\"]);\r\n\r\n        return $this->render('accueil_client/index.html.twig',\r\n//            [\r\n//            'Restaurants' => $Restaurants,]\r\n        )\r\n//\r\n//        ->add('localisation', EntityType::class, [\r\n//            'class' => CategorieRestaurant::class,\r\n//            'choice_label' => function ($categorieRestaurant) {\r\n//                return $categorieRestaurant->getLibelle();\r\n//            }\r\n//        ])\r\n            ;\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/Controller/AccueilClientController.php b/src/Controller/AccueilClientController.php
+--- a/src/Controller/AccueilClientController.php	(revision c1a80fbf5834c046491cce4729a9e241926c2f83)
++++ b/src/Controller/AccueilClientController.php	(date 1614693982222)
+@@ -3,7 +3,7 @@
+ namespace App\Controller;
+ 
+ use App\Entity\CategorieRestaurant;
+-use App\Repository\RestaurantRepository;
++use App\Form\CategorieRestaurantType;
+ use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
+ use Symfony\Component\HttpFoundation\Response;
+ use Symfony\Component\Routing\Annotation\Route;
+@@ -16,21 +16,18 @@
+     public function index(): Response
+     {
+ 
+-//        $repositoryRestaurant = $this->getDoctrine()->getRepository(RestaurantRepository::class);
+-//        $Restaurants = $repositoryRestaurant->findby([], ["" => "DESC"]);
++        $form = $this->createForm(CategorieRestaurantType::class);
++
++      //  $categorieRestaurants = $this->getDoctrine()->getRepository(CategorieRestaurant::class)
++                            //   ->findAll();
+ 
+         return $this->render('accueil_client/index.html.twig',
+-//            [
+-//            'Restaurants' => $Restaurants,]
+-        )
+-//
+-//        ->add('localisation', EntityType::class, [
+-//            'class' => CategorieRestaurant::class,
+-//            'choice_label' => function ($categorieRestaurant) {
+-//                return $categorieRestaurant->getLibelle();
+-//            }
+-//        ])
+-            ;
++            [
++                'form' => $form->createView(),
++                'categorieRestaurants'=> $categorieRestaurant,
++              // 'categorieRestorant'=> $categorieRestaurants,
++
++            ]);
+ 
+ 
+     }
+Index: templates/registration/register.html.twig
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>{% extends 'base.html.twig' %}\r\n\r\n{% block title %}Register{% endblock %}\r\n\r\n{% block body %}\r\n    {% for flashError in app.flashes('verify_email_error') %}\r\n        <div class=\"alert alert-danger\" role=\"alert\">{{ flashError }}</div>\r\n    {% endfor %}\r\n\r\n    <h1>Register</h1>\r\n\r\n    {{ form_start(registrationForm) }}\r\n        {{ form_row(registrationForm.firstName) }}\r\n        {{ form_row(registrationForm.lastName) }}\r\n        {{ form_row(registrationForm.adress) }}\r\n        {{ form_row(registrationForm.ville) }}\r\n        {{ form_row(registrationForm.email) }}\r\n        {{ form_row(registrationForm.plainPassword, {\r\n            label: 'Password'\r\n        }) }}\r\n        {{ form_row(registrationForm.userType) }}\r\n        {{ form_row(registrationForm.agreeTerms) }}\r\n\r\n        <button type=\"submit\" class=\"btn\">Register</button>\r\n    {{ form_end(registrationForm) }}\r\n{% endblock %}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/templates/registration/register.html.twig b/templates/registration/register.html.twig
+--- a/templates/registration/register.html.twig	(revision c1a80fbf5834c046491cce4729a9e241926c2f83)
++++ b/templates/registration/register.html.twig	(date 1614681045321)
+@@ -9,8 +9,8 @@
+ 
+     <h1>Register</h1>
+ 
+-    {{ form_start(registrationForm) }}
+-        {{ form_row(registrationForm.firstName) }}
++    {{ form_start(CategorieRestaurant) }}
++        {{ form_row(CategorieRestaurant.firstName) }}
+         {{ form_row(registrationForm.lastName) }}
+         {{ form_row(registrationForm.adress) }}
+         {{ form_row(registrationForm.ville) }}
+@@ -21,6 +21,6 @@
+         {{ form_row(registrationForm.userType) }}
+         {{ form_row(registrationForm.agreeTerms) }}
+ 
+-        <button type="submit" class="btn">Register</button>
++        <button type="submit" class="btn">rechercher</button>
+     {{ form_end(registrationForm) }}
+ {% endblock %}
+Index: templates/accueil_client/index.html.twig
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>{% extends 'base.html.twig' %}\r\n\r\n{% block title %}Hello AccueilClientController!{% endblock %}\r\n\r\n{% block body %}\r\n\r\n\r\n    <div>\r\n        <h1> Connecté </h1>\r\n\r\n        <a href=\"a_definir_le_chemin.html.twig\">Profils</a>\r\n        <a href=\"a_definir_le_chemin.html.twig\">Historique des Commandes</a>\r\n        <a href=\"a_definir_le_chemin.html.twig\">Se Déconnecter</a>\r\n\r\n    </div>\r\n    <div>\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Adresse</th>\r\n                // récupérer les catégories restaurants\r\n                <th></th>\r\n\r\n\r\n            </tr>\r\n            </thead>\r\n\r\n        </table>\r\n\r\n    </div>\r\n\r\n{% endblock %}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/templates/accueil_client/index.html.twig b/templates/accueil_client/index.html.twig
+--- a/templates/accueil_client/index.html.twig	(revision c1a80fbf5834c046491cce4729a9e241926c2f83)
++++ b/templates/accueil_client/index.html.twig	(date 1614691678613)
+@@ -5,25 +5,30 @@
+ {% block body %}
+ 
+ 
+-    <div>
+-        <h1> Connecté </h1>
+-
+-        <a href="a_definir_le_chemin.html.twig">Profils</a>
+-        <a href="a_definir_le_chemin.html.twig">Historique des Commandes</a>
+-        <a href="a_definir_le_chemin.html.twig">Se Déconnecter</a>
+-
+-    </div>
+     <div>
+         <table>
+             <thead>
+             <tr>
+                 <th>Adresse</th>
+                 // récupérer les catégories restaurants
+-                <th></th>
+-
+-
++                <th>{{ form(form)}} </th>
+             </tr>
++
++
+             </thead>
++            <tbody>
++
++
++            <tr>
++                <!--<td>{user.adress }}</td>-->
++
++                <!--% for categorieRestaurant in categorieRestaurants %}
++
++                <td>{ categorieRestaurant.libelle }}</td>
++                % endfor %} -->
++            </tr>
++
++            </tbody>
+ 
+         </table>
+ 
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_02_03_2021_11_30_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_03_2021_11_30_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_03_2021_11_30_[Default_Changelist]/shelved.patch
new file mode 100644
--- /dev/null	(date 1614681044568)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_03_2021_11_30_[Default_Changelist]/shelved.patch	(date 1614681044568)
@@ -0,0 +1,123 @@
+Index: templates/registration/register.html.twig
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>{% extends 'base.html.twig' %}\r\n\r\n{% block title %}Register{% endblock %}\r\n\r\n{% block body %}\r\n    {% for flashError in app.flashes('verify_email_error') %}\r\n        <div class=\"alert alert-danger\" role=\"alert\">{{ flashError }}</div>\r\n    {% endfor %}\r\n\r\n    <h1>Register</h1>\r\n\r\n    {{ form_start(registrationForm) }}\r\n        {{ form_row(registrationForm.firstName) }}\r\n        {{ form_row(registrationForm.lastName) }}\r\n        {{ form_row(registrationForm.adress) }}\r\n        {{ form_row(registrationForm.ville) }}\r\n        {{ form_row(registrationForm.email) }}\r\n        {{ form_row(registrationForm.plainPassword, {\r\n            label: 'Password'\r\n        }) }}\r\n        {{ form_row(registrationForm.userType) }}\r\n        {{ form_row(registrationForm.agreeTerms) }}\r\n\r\n        <button type=\"submit\" class=\"btn\">Register</button>\r\n    {{ form_end(registrationForm) }}\r\n{% endblock %}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/templates/registration/register.html.twig b/templates/registration/register.html.twig
+--- a/templates/registration/register.html.twig	(revision fc2d77ee8ee39069ec6e97f99a17220d412d58d3)
++++ b/templates/registration/register.html.twig	(date 1614680707113)
+@@ -9,8 +9,8 @@
+ 
+     <h1>Register</h1>
+ 
+-    {{ form_start(registrationForm) }}
+-        {{ form_row(registrationForm.firstName) }}
++    {{ form_start(CategorieRestaurant) }}
++        {{ form_row(CategorieRestaurant.firstName) }}
+         {{ form_row(registrationForm.lastName) }}
+         {{ form_row(registrationForm.adress) }}
+         {{ form_row(registrationForm.ville) }}
+@@ -21,6 +21,6 @@
+         {{ form_row(registrationForm.userType) }}
+         {{ form_row(registrationForm.agreeTerms) }}
+ 
+-        <button type="submit" class="btn">Register</button>
++        <button type="submit" class="btn">rechercher</button>
+     {{ form_end(registrationForm) }}
+ {% endblock %}
+Index: templates/accueil_client/index.html.twig
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>{% extends 'base.html.twig' %}\r\n\r\n{% block title %}Hello AccueilClientController!{% endblock %}\r\n\r\n{% block body %}\r\n\r\n\r\n    <div>\r\n        <h1> Connecté </h1>\r\n\r\n        <a href=\"a_definir_le_chemin.html.twig\">Profils</a>\r\n        <a href=\"a_definir_le_chemin.html.twig\">Historique des Commandes</a>\r\n        <a href=\"a_definir_le_chemin.html.twig\">Se Déconnecter</a>\r\n\r\n    </div>\r\n    <div>\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Adresse</th>\r\n                // récupérer les catégories restaurants\r\n                <th></th>\r\n\r\n\r\n            </tr>\r\n            </thead>\r\n\r\n        </table>\r\n\r\n    </div>\r\n\r\n{% endblock %}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/templates/accueil_client/index.html.twig b/templates/accueil_client/index.html.twig
+--- a/templates/accueil_client/index.html.twig	(revision fc2d77ee8ee39069ec6e97f99a17220d412d58d3)
++++ b/templates/accueil_client/index.html.twig	(date 1614680707123)
+@@ -19,7 +19,13 @@
+             <tr>
+                 <th>Adresse</th>
+                 // récupérer les catégories restaurants
+-                <th></th>
++                // afficher les
++                <th>
++                    {{ form_start(CategorieRestaurant) }}
++                    {{ form. }}
++
++                    <button type="submit" class="btn">Register</button>
++                    {{ form_end(registrationForm) }}</th>
+ 
+ 
+             </tr>
+Index: .env
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+># In all environments, the following files are loaded if they exist,\r\n# the latter taking precedence over the former:\r\n#\r\n#  * .env                contains default values for the environment variables needed by the app\r\n#  * .env.local          uncommitted file with local overrides\r\n#  * .env.$APP_ENV       committed environment-specific defaults\r\n#  * .env.$APP_ENV.local uncommitted environment-specific overrides\r\n#\r\n# Real environment variables win over .env files.\r\n#\r\n# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.\r\n#\r\n# Run \"composer dump-env prod\" to compile .env files for production use (requires symfony/flex >=1.2).\r\n# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration\r\n\r\n###> symfony/framework-bundle ###\r\nAPP_ENV=dev\r\nAPP_SECRET=44c5717b8e2f84d9893d6753732fdabf\r\n###< symfony/framework-bundle ###\r\n\r\n###> symfony/mailer ###\r\n# MAILER_DSN=smtp://localhost\r\n###< symfony/mailer ###\r\n\r\n###> doctrine/doctrine-bundle ###\r\n# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url\r\n# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml\r\n#\r\n# DATABASE_URL=\"sqlite:///%kernel.project_dir%/var/data.db\"\r\nDATABASE_URL=\"mysql://root:password@127.0.0.1:3306/gastronhome\"\r\n# DATABASE_URL=\"postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=13&charset=utf8\"\r\n###< doctrine/doctrine-bundle ###\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.env b/.env
+--- a/.env	(revision fc2d77ee8ee39069ec6e97f99a17220d412d58d3)
++++ b/.env	(date 1614680707136)
+@@ -27,6 +27,6 @@
+ # IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
+ #
+ # DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
+-DATABASE_URL="mysql://root:password@127.0.0.1:3306/gastronhome"
++DATABASE_URL="mysql://root:root@127.0.0.1:3306/gastronhome"
+ # DATABASE_URL="postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=13&charset=utf8"
+ ###< doctrine/doctrine-bundle ###
+Index: src/Controller/AccueilClientController.php
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?php\r\n\r\nnamespace App\\Controller;\r\n\r\nuse App\\Entity\\CategorieRestaurant;\r\nuse App\\Repository\\RestaurantRepository;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\r\nuse Symfony\\Component\\HttpFoundation\\Response;\r\nuse Symfony\\Component\\Routing\\Annotation\\Route;\r\n\r\nclass AccueilClientController extends AbstractController\r\n{\r\n    /**\r\n     * @Route(\"/accueil/client\", name=\"client\")\r\n     */\r\n    public function index(): Response\r\n    {\r\n\r\n//        $repositoryRestaurant = $this->getDoctrine()->getRepository(RestaurantRepository::class);\r\n//        $Restaurants = $repositoryRestaurant->findby([], [\"\" => \"DESC\"]);\r\n\r\n        return $this->render('accueil_client/index.html.twig',\r\n//            [\r\n//            'Restaurants' => $Restaurants,]\r\n        )\r\n//\r\n//        ->add('localisation', EntityType::class, [\r\n//            'class' => CategorieRestaurant::class,\r\n//            'choice_label' => function ($categorieRestaurant) {\r\n//                return $categorieRestaurant->getLibelle();\r\n//            }\r\n//        ])\r\n            ;\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/Controller/AccueilClientController.php b/src/Controller/AccueilClientController.php
+--- a/src/Controller/AccueilClientController.php	(revision fc2d77ee8ee39069ec6e97f99a17220d412d58d3)
++++ b/src/Controller/AccueilClientController.php	(date 1614680713872)
+@@ -3,7 +3,6 @@
+ namespace App\Controller;
+ 
+ use App\Entity\CategorieRestaurant;
+-use App\Repository\RestaurantRepository;
+ use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
+ use Symfony\Component\HttpFoundation\Response;
+ use Symfony\Component\Routing\Annotation\Route;
+@@ -16,21 +15,18 @@
+     public function index(): Response
+     {
+ 
+-//        $repositoryRestaurant = $this->getDoctrine()->getRepository(RestaurantRepository::class);
+-//        $Restaurants = $repositoryRestaurant->findby([], ["" => "DESC"]);
++        $repositoryRestaurant = $this->getDoctrine()->getRepository(Restaurant::class);
++        $Restaurants = $repositoryRestaurant->findby([], ["" => "DESC"]);
+ 
+-        return $this->render('accueil_client/index.html.twig',
+-//            [
+-//            'Restaurants' => $Restaurants,]
+-        )
+-//
+-//        ->add('localisation', EntityType::class, [
+-//            'class' => CategorieRestaurant::class,
+-//            'choice_label' => function ($categorieRestaurant) {
+-//                return $categorieRestaurant->getLibelle();
+-//            }
+-//        ])
+-            ;
++        return $this->render('accueil_client/index.html.twig', [
++            'Restaurants' => $Restaurants,])
++
++        ->add('localisation', EntityType::class, [
++            'class' => CategorieRestaurant::class,
++            'choice_label' => function ($categorieRestaurant) {
++                return $categorieRestaurant->getLibelle();
++            }
++        ]);
+ 
+ 
+     }
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_02_03_2021_11_30__Default_Changelist_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_03_2021_11_30__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_03_2021_11_30__Default_Changelist_.xml
new file mode 100644
--- /dev/null	(date 1614681049521)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_03_2021_11_30__Default_Changelist_.xml	(date 1614681049521)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_02_03_2021_11_30_[Default_Changelist]" date="1614681045525" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_03_2021_11_30_[Default_Changelist]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 02/03/2021 11:30 [Default Changelist]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_11_25_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_11_25_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_11_25_[Default_Changelist]/shelved.patch
new file mode 100644
--- /dev/null	(date 1614680705811)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_03_2021_11_25_[Default_Changelist]/shelved.patch	(date 1614680705811)
@@ -0,0 +1,103 @@
+Index: templates/registration/register.html.twig
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>{% extends 'base.html.twig' %}\r\n\r\n{% block title %}Register{% endblock %}\r\n\r\n{% block body %}\r\n    {% for flashError in app.flashes('verify_email_error') %}\r\n        <div class=\"alert alert-danger\" role=\"alert\">{{ flashError }}</div>\r\n    {% endfor %}\r\n\r\n    <h1>Register</h1>\r\n\r\n    {{ form_start(registrationForm) }}\r\n        {{ form_row(registrationForm.firstName) }}\r\n        {{ form_row(registrationForm.lastName) }}\r\n        {{ form_row(registrationForm.adress) }}\r\n        {{ form_row(registrationForm.ville) }}\r\n        {{ form_row(registrationForm.email) }}\r\n        {{ form_row(registrationForm.plainPassword, {\r\n            label: 'Password'\r\n        }) }}\r\n        {{ form_row(registrationForm.userType) }}\r\n        {{ form_row(registrationForm.agreeTerms) }}\r\n\r\n        <button type=\"submit\" class=\"btn\">Register</button>\r\n    {{ form_end(registrationForm) }}\r\n{% endblock %}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/templates/registration/register.html.twig b/templates/registration/register.html.twig
+--- a/templates/registration/register.html.twig	(revision 84c2d90772a70488a7c14ea61fdeac3416de6245)
++++ b/templates/registration/register.html.twig	(date 1614677600500)
+@@ -9,8 +9,8 @@
+ 
+     <h1>Register</h1>
+ 
+-    {{ form_start(registrationForm) }}
+-        {{ form_row(registrationForm.firstName) }}
++    {{ form_start(CategorieRestaurant) }}
++        {{ form_row(CategorieRestaurant.firstName) }}
+         {{ form_row(registrationForm.lastName) }}
+         {{ form_row(registrationForm.adress) }}
+         {{ form_row(registrationForm.ville) }}
+@@ -21,6 +21,6 @@
+         {{ form_row(registrationForm.userType) }}
+         {{ form_row(registrationForm.agreeTerms) }}
+ 
+-        <button type="submit" class="btn">Register</button>
++        <button type="submit" class="btn">rechercher</button>
+     {{ form_end(registrationForm) }}
+ {% endblock %}
+Index: templates/accueil_client/index.html.twig
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>{% extends 'base.html.twig' %}\r\n\r\n{% block title %}Hello AccueilClientController!{% endblock %}\r\n\r\n{% block body %}\r\n\r\n\r\n    <div>\r\n        <h1> Connecté </h1>\r\n\r\n        <a href=\"a_definir_le_chemin.html.twig\">Profils</a>\r\n        <a href=\"a_definir_le_chemin.html.twig\">Historique des Commandes</a>\r\n        <a href=\"a_definir_le_chemin.html.twig\">Se Déconnecter</a>\r\n\r\n    </div>\r\n    <div>\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Adresse</th>\r\n                // récupérer les catégories restaurants\r\n                <th></th>\r\n\r\n\r\n            </tr>\r\n            </thead>\r\n\r\n        </table>\r\n\r\n    </div>\r\n\r\n{% endblock %}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/templates/accueil_client/index.html.twig b/templates/accueil_client/index.html.twig
+--- a/templates/accueil_client/index.html.twig	(revision 84c2d90772a70488a7c14ea61fdeac3416de6245)
++++ b/templates/accueil_client/index.html.twig	(date 1614679162537)
+@@ -19,7 +19,13 @@
+             <tr>
+                 <th>Adresse</th>
+                 // récupérer les catégories restaurants
+-                <th></th>
++                // afficher les
++                <th>
++                    {{ form_start(CategorieRestaurant) }}
++                    {{ form. }}
++
++                    <button type="submit" class="btn">Register</button>
++                    {{ form_end(registrationForm) }}</th>
+ 
+ 
+             </tr>
+Index: .env
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+># In all environments, the following files are loaded if they exist,\r\n# the latter taking precedence over the former:\r\n#\r\n#  * .env                contains default values for the environment variables needed by the app\r\n#  * .env.local          uncommitted file with local overrides\r\n#  * .env.$APP_ENV       committed environment-specific defaults\r\n#  * .env.$APP_ENV.local uncommitted environment-specific overrides\r\n#\r\n# Real environment variables win over .env files.\r\n#\r\n# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.\r\n#\r\n# Run \"composer dump-env prod\" to compile .env files for production use (requires symfony/flex >=1.2).\r\n# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration\r\n\r\n###> symfony/framework-bundle ###\r\nAPP_ENV=dev\r\nAPP_SECRET=44c5717b8e2f84d9893d6753732fdabf\r\n###< symfony/framework-bundle ###\r\n\r\n###> symfony/mailer ###\r\n# MAILER_DSN=smtp://localhost\r\n###< symfony/mailer ###\r\n\r\n###> doctrine/doctrine-bundle ###\r\n# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url\r\n# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml\r\n#\r\n# DATABASE_URL=\"sqlite:///%kernel.project_dir%/var/data.db\"\r\nDATABASE_URL=\"mysql://root:password@127.0.0.1:3306/gastronhome\"\r\n# DATABASE_URL=\"postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=13&charset=utf8\"\r\n###< doctrine/doctrine-bundle ###\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.env b/.env
+--- a/.env	(revision 84c2d90772a70488a7c14ea61fdeac3416de6245)
++++ b/.env	(date 1614677076400)
+@@ -27,6 +27,6 @@
+ # IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
+ #
+ # DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
+-DATABASE_URL="mysql://root:password@127.0.0.1:3306/gastronhome"
++DATABASE_URL="mysql://root:root@127.0.0.1:3306/gastronhome"
+ # DATABASE_URL="postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=13&charset=utf8"
+ ###< doctrine/doctrine-bundle ###
+Index: src/Controller/AccueilClientController.php
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?php\r\n\r\nnamespace App\\Controller;\r\n\r\nuse App\\Entity\\CategorieRestaurant;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\r\nuse Symfony\\Component\\HttpFoundation\\Response;\r\nuse Symfony\\Component\\Routing\\Annotation\\Route;\r\n\r\nclass AccueilClientController extends AbstractController\r\n{\r\n    /**\r\n     * @Route(\"/accueil/client\", name=\"client\")\r\n     */\r\n    public function index(): Response\r\n    {\r\n\r\n        $repositoryRestaurant = $this->getDoctrine()->getRepository(Restaurant::class);\r\n        $Restaurants = $repositoryRestaurant->findby([], [\"\" => \"DESC\"]);\r\n\r\n        return $this->render('accueil_client/index.html.twig', [\r\n            'Restaurants' => $Restaurants,])\r\n\r\n        ->add('localisation', EntityType::class, [\r\n            'class' => CategorieRestaurant::class,\r\n            'choice_label' => function ($categorieRestaurant) {\r\n                return $categorieRestaurant->getLibelle();\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/Controller/AccueilClientController.php b/src/Controller/AccueilClientController.php
+--- a/src/Controller/AccueilClientController.php	(revision 84c2d90772a70488a7c14ea61fdeac3416de6245)
++++ b/src/Controller/AccueilClientController.php	(date 1614679099061)
+@@ -15,18 +15,11 @@
+     public function index(): Response
+     {
+ 
+-        $repositoryRestaurant = $this->getDoctrine()->getRepository(Restaurant::class);
+-        $Restaurants = $repositoryRestaurant->findby([], ["" => "DESC"]);
+ 
+         return $this->render('accueil_client/index.html.twig', [
+-            'Restaurants' => $Restaurants,])
++            ]);
+ 
+-        ->add('localisation', EntityType::class, [
+-            'class' => CategorieRestaurant::class,
+-            'choice_label' => function ($categorieRestaurant) {
+-                return $categorieRestaurant->getLibelle();
+-            }
+-        ]);
++
+ 
+ 
+     }
Index: src/Controller/AccueilClientController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Controller;\r\n\r\nuse App\\Entity\\CategorieRestaurant;\r\nuse App\\Repository\\RestaurantRepository;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\r\nuse Symfony\\Component\\HttpFoundation\\Response;\r\nuse Symfony\\Component\\Routing\\Annotation\\Route;\r\n\r\nclass AccueilClientController extends AbstractController\r\n{\r\n    /**\r\n     * @Route(\"/client/accueil\", name=\"client\")\r\n     */\r\n    public function index(): Response\r\n    {\r\n\r\n//        $repositoryRestaurant = $this->getDoctrine()->getRepository(RestaurantRepository::class);\r\n//        $Restaurants = $repositoryRestaurant->findby([], [\"\" => \"DESC\"]);\r\n\r\n        return $this->render('accueil_client/index.html.twig',\r\n//            [\r\n//            'Restaurants' => $Restaurants,]\r\n        )\r\n//\r\n//        ->add('localisation', EntityType::class, [\r\n//            'class' => CategorieRestaurant::class,\r\n//            'choice_label' => function ($categorieRestaurant) {\r\n//                return $categorieRestaurant->getLibelle();\r\n//            }\r\n//        ])\r\n            ;\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/AccueilClientController.php b/src/Controller/AccueilClientController.php
--- a/src/Controller/AccueilClientController.php	(revision c1a80fbf5834c046491cce4729a9e241926c2f83)
+++ b/src/Controller/AccueilClientController.php	(date 1614694985710)
@@ -3,7 +3,7 @@
 namespace App\Controller;
 
 use App\Entity\CategorieRestaurant;
-use App\Repository\RestaurantRepository;
+use App\Form\CategorieRestaurantType;
 use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\Routing\Annotation\Route;
@@ -16,21 +16,19 @@
     public function index(): Response
     {
 
-//        $repositoryRestaurant = $this->getDoctrine()->getRepository(RestaurantRepository::class);
-//        $Restaurants = $repositoryRestaurant->findby([], ["" => "DESC"]);
+
+        $form = $this->createForm(CategorieRestaurantType::class);
+
+        //$categorieRestaurants = $this->getDoctrine()->getRepository(CategorieRestaurant::class)
+                             // ->findAll();
 
         return $this->render('accueil_client/index.html.twig',
-//            [
-//            'Restaurants' => $Restaurants,]
-        )
-//
-//        ->add('localisation', EntityType::class, [
-//            'class' => CategorieRestaurant::class,
-//            'choice_label' => function ($categorieRestaurant) {
-//                return $categorieRestaurant->getLibelle();
-//            }
-//        ])
-            ;
+            [
+                'form' => $form->createView(),
+                //'categorieRestaurants'=> $categorieRestaurant,
+              // 'categorieRestorant'=> $categorieRestaurants,
+
+            ]);
 
 
     }
