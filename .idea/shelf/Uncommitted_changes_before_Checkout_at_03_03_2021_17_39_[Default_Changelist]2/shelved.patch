Index: .env
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># In all environments, the following files are loaded if they exist,\r\n# the latter taking precedence over the former:\r\n#\r\n#  * .env                contains default values for the environment variables needed by the app\r\n#  * .env.local          uncommitted file with local overrides\r\n#  * .env.$APP_ENV       committed environment-specific defaults\r\n#  * .env.$APP_ENV.local uncommitted environment-specific overrides\r\n#\r\n# Real environment variables win over .env files.\r\n#\r\n# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.\r\n#\r\n# Run \"composer dump-env prod\" to compile .env files for production use (requires symfony/flex >=1.2).\r\n# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration\r\n\r\n###> symfony/framework-bundle ###\r\nAPP_ENV=dev\r\nAPP_SECRET=44c5717b8e2f84d9893d6753732fdabf\r\n###< symfony/framework-bundle ###\r\n\r\n###> symfony/mailer ###\r\n# MAILER_DSN=smtp://localhost\r\n###< symfony/mailer ###\r\n\r\n###> doctrine/doctrine-bundle ###\r\n# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url\r\n# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml\r\n#\r\n# DATABASE_URL=\"sqlite:///%kernel.project_dir%/var/data.db\"\r\nDATABASE_URL=\"mysql://root:password@127.0.0.1:3306/gastronhome\"\r\n# DATABASE_URL=\"postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=13&charset=utf8\"\r\n###< doctrine/doctrine-bundle ###\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.env b/.env
--- a/.env	(revision 9e4febc20f3d12d0d7439e873d7f0917bc08214c)
+++ b/.env	(date 1614789568741)
@@ -27,6 +27,6 @@
 # IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
 #
 # DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
-DATABASE_URL="mysql://root:password@127.0.0.1:3306/gastronhome"
+DATABASE_URL="mysql://root:@127.0.0.1:3306/gastronhome"
 # DATABASE_URL="postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=13&charset=utf8"
 ###< doctrine/doctrine-bundle ###
Index: templates/ville/_form.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{{ form_start(form, {'attr':{'class':'form-group'}}) }}\r\n<div class=\"d-flex justify-content-around\">\r\n    <div class=\"col\">\r\n        {{ form_row(form.nom_ville, {'attr':{'class':'form-control'}}) }}\r\n    </div>\r\n    <div class=\"col\">\r\n        {{ form_row(form.Secteur, {'attr':{'class':'form-control'}}) }}\r\n    </div>\r\n</div>\r\n<div class=\"d-flex justify-content-center\">\r\n    <button class=\"btn btn-primary mt-5\">{{ button_label|default('Mettre à jour') }}</button>\r\n</div>\r\n{{ form_end(form) }}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/ville/_form.html.twig b/templates/ville/_form.html.twig
--- a/templates/ville/_form.html.twig	(revision 9e4febc20f3d12d0d7439e873d7f0917bc08214c)
+++ b/templates/ville/_form.html.twig	(date 1614789568708)
@@ -6,6 +6,9 @@
     <div class="col">
         {{ form_row(form.Secteur, {'attr':{'class':'form-control'}}) }}
     </div>
+    <div class="col">
+        {{ form_row(form.code_postal, {'attr':{'class':'form-control'}}) }}
+    </div>
 </div>
 <div class="d-flex justify-content-center">
     <button class="btn btn-primary mt-5">{{ button_label|default('Mettre à jour') }}</button>
Index: src/Entity/Ville.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse App\\Repository\\VilleRepository;\r\nuse Doctrine\\Common\\Collections\\ArrayCollection;\r\nuse Doctrine\\Common\\Collections\\Collection;\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\n\r\n/**\r\n * @ORM\\Entity(repositoryClass=VilleRepository::class)\r\n */\r\nclass Ville\r\n{\r\n    public function __toString()\r\n    {\r\n        return $this->nom_ville;\r\n    }\r\n\r\n    /**\r\n     * @ORM\\Id\r\n     * @ORM\\GeneratedValue\r\n     * @ORM\\Column(type=\"integer\")\r\n     */\r\n    private $id;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=70)\r\n     */\r\n    private $nom_ville;\r\n\r\n    /**\r\n     * @ORM\\OneToMany(targetEntity=User::class, mappedBy=\"ville\")\r\n     */\r\n    private $users;\r\n\r\n    /**\r\n     * @ORM\\ManyToOne(targetEntity=Secteur::class, inversedBy=\"villes\")\r\n     * @ORM\\JoinColumn(nullable=false)\r\n     */\r\n    private $Secteur;\r\n\r\n    public function __construct()\r\n    {\r\n        $this->users = new ArrayCollection();\r\n    }\r\n\r\n    public function getId(): ?int\r\n    {\r\n        return $this->id;\r\n    }\r\n\r\n    public function getNomVille(): ?string\r\n    {\r\n        return $this->nom_ville;\r\n    }\r\n\r\n    public function setNomVille(string $nom_ville): self\r\n    {\r\n        $this->nom_ville = $nom_ville;\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @return Collection|User[]\r\n     */\r\n    public function getUsers(): Collection\r\n    {\r\n        return $this->users;\r\n    }\r\n\r\n    public function addUser(User $user): self\r\n    {\r\n        if (!$this->users->contains($user)) {\r\n            $this->users[] = $user;\r\n            $user->setVille($this);\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function removeUser(User $user): self\r\n    {\r\n        if ($this->users->removeElement($user)) {\r\n            // set the owning side to null (unless already changed)\r\n            if ($user->getVille() === $this) {\r\n                $user->setVille(null);\r\n            }\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getSecteur(): ?Secteur\r\n    {\r\n        return $this->Secteur;\r\n    }\r\n\r\n    public function setSecteur(?Secteur $Secteur): self\r\n    {\r\n        $this->Secteur = $Secteur;\r\n\r\n        return $this;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Entity/Ville.php b/src/Entity/Ville.php
--- a/src/Entity/Ville.php	(revision 9e4febc20f3d12d0d7439e873d7f0917bc08214c)
+++ b/src/Entity/Ville.php	(date 1614789568716)
@@ -40,6 +40,11 @@
      */
     private $Secteur;
 
+    /**
+     * @ORM\Column(type="string", length=10, nullable=true)
+     */
+    private $codePostal;
+
     public function __construct()
     {
         $this->users = new ArrayCollection();
@@ -101,6 +106,18 @@
     {
         $this->Secteur = $Secteur;
 
+        return $this;
+    }
+
+    public function getCodePostal(): ?string
+    {
+        return $this->codePostal;
+    }
+
+    public function setCodePostal(?string $codePostal): self
+    {
+        $this->codePostal = $codePostal;
+
         return $this;
     }
 }
Index: templates/secteur/show.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'base.html.twig' %}\r\n\r\n{% block title %}Secteur{% endblock %}\r\n\r\n{% block body %}\r\n    <div class=\"offset-2 col-8\">\r\n        <h1 class=\"text-center\">Secteur</h1>\r\n\r\n        <div class=\"d-flex justify-content-center\">\r\n            <div class=\"card\" style=\"width: 18rem;\">\r\n                <img src=\"...\" class=\"card-img-top\" alt=\"...\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">{{ secteur.nomSecteur }}</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {# TODO: faire la liste des villes du secteur#}\r\n\r\n        {#    <table class=\"table\">#}\r\n        {#        <tbody>#}\r\n        {#            <tr>#}\r\n        {#                <th>Id</th>#}\r\n        {#                <td>{{ secteur.id }}</td>#}\r\n        {#            </tr>#}\r\n        {#            <tr>#}\r\n        {#                <th>NomSecteur</th>#}\r\n        {#                <td>{{ secteur.nomSecteur }}</td>#}\r\n        {#            </tr>#}\r\n        {#        </tbody>#}\r\n        {#    </table>#}\r\n\r\n        <div class=\"d-flex justify-content-around mt-4\">\r\n            <a href=\"{{ path('secteur_index') }}\" class=\"btn btn-primary\">Retour à la liste</a>\r\n\r\n            <a href=\"{{ path('secteur_edit', {'id': secteur.id}) }}\" class=\"btn btn-success\">Editer le secteur</a>\r\n\r\n            {{ include('secteur/_delete_form.html.twig') }}\r\n        </div>\r\n    </div>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/secteur/show.html.twig b/templates/secteur/show.html.twig
--- a/templates/secteur/show.html.twig	(revision 9e4febc20f3d12d0d7439e873d7f0917bc08214c)
+++ b/templates/secteur/show.html.twig	(date 1614789568723)
@@ -14,22 +14,6 @@
                 </div>
             </div>
         </div>
-
-        {# TODO: faire la liste des villes du secteur#}
-
-        {#    <table class="table">#}
-        {#        <tbody>#}
-        {#            <tr>#}
-        {#                <th>Id</th>#}
-        {#                <td>{{ secteur.id }}</td>#}
-        {#            </tr>#}
-        {#            <tr>#}
-        {#                <th>NomSecteur</th>#}
-        {#                <td>{{ secteur.nomSecteur }}</td>#}
-        {#            </tr>#}
-        {#        </tbody>#}
-        {#    </table>#}
-
         <div class="d-flex justify-content-around mt-4">
             <a href="{{ path('secteur_index') }}" class="btn btn-primary">Retour à la liste</a>
 
Index: src/Form/VilleType.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Form;\r\n\r\nuse App\\Entity\\Ville;\r\nuse Symfony\\Component\\Form\\AbstractType;\r\nuse Symfony\\Component\\Form\\FormBuilderInterface;\r\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\r\n\r\nclass VilleType extends AbstractType\r\n{\r\n    public function buildForm(FormBuilderInterface $builder, array $options)\r\n    {\r\n        $builder\r\n            ->add('nom_ville')\r\n            ->add('Secteur')\r\n        ;\r\n    }\r\n\r\n    public function configureOptions(OptionsResolver $resolver)\r\n    {\r\n        $resolver->setDefaults([\r\n            'data_class' => Ville::class,\r\n        ]);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Form/VilleType.php b/src/Form/VilleType.php
--- a/src/Form/VilleType.php	(revision 9e4febc20f3d12d0d7439e873d7f0917bc08214c)
+++ b/src/Form/VilleType.php	(date 1614789568729)
@@ -14,6 +14,7 @@
         $builder
             ->add('nom_ville')
             ->add('Secteur')
+            ->add('code_postal')
         ;
     }
 
Index: templates/ville/index.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'base.html.twig' %}\r\n\r\n{% block title %}Ville index{% endblock %}\r\n\r\n{% block body %}\r\n<div class=\"offset-2 col-8\">\r\n    <h1 class=\"text-center\">Ville index</h1>\r\n\r\n    <table class=\"table table-hover text-center\">\r\n        <thead>\r\n            <tr>\r\n                <th>Nom Ville</th>\r\n                <th></th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n        {% for ville in villes %}\r\n            <tr>\r\n                <td>{{ ville.nomVille }}</td>\r\n                <td>\r\n                    <a href=\"{{ path('ville_show', {'id': ville.id}) }}\" class=\"btn btn-info\">Voir</a>\r\n                </td>\r\n                <td>\r\n                    <a href=\"{{ path('ville_edit', {'id': ville.id}) }}\" class=\"btn btn-success\">Editer</a>\r\n                </td>\r\n            </tr>\r\n        {% else %}\r\n            <tr>\r\n                <td colspan=\"3\">Aucune ville trouvée</td>\r\n            </tr>\r\n        {% endfor %}\r\n        </tbody>\r\n    </table>\r\n    <div class=\"d-flex justify-content-end\">\r\n        <a href=\"{{ path('ville_new') }}\" class=\"btn btn-primary\">Ajouter une ville</a>\r\n    </div>\r\n</div>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/ville/index.html.twig b/templates/ville/index.html.twig
--- a/templates/ville/index.html.twig	(revision 9e4febc20f3d12d0d7439e873d7f0917bc08214c)
+++ b/templates/ville/index.html.twig	(date 1614789568735)
@@ -10,6 +10,8 @@
         <thead>
             <tr>
                 <th>Nom Ville</th>
+                <th>Secteur</th>
+                <th>Code Postal</th>
                 <th></th>
                 <th></th>
             </tr>
@@ -18,6 +20,8 @@
         {% for ville in villes %}
             <tr>
                 <td>{{ ville.nomVille }}</td>
+                <td>{{ ville.Secteur.nomSecteur }}</td>
+                <td>{{ ville.codePostal }}</td>
                 <td>
                     <a href="{{ path('ville_show', {'id': ville.id}) }}" class="btn btn-info">Voir</a>
                 </td>
